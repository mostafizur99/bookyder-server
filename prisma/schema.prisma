// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String            @id @default(uuid())
  name       String
  email      String            @unique
  password   String
  role       String            @default("customer")
  contactNo  String
  address    String
  profileImg String
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  reviews    ReviewAndRating[]
  orders     Order[]

  @@map("users")
}

model Category {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  books     Book[]

  @@map("categories")
}

model Book {
  id               String            @id @default(uuid())
  title            String
  author           String
  price            Int
  genre            String
  publicationDate  String
  category         Category          @relation(fields: [categoryId], references: [id])
  categoryId       String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  reviewAndRatings ReviewAndRating[]

  @@map("books")
}

model ReviewAndRating {
  id        String   @id @default(uuid())
  review    String
  rating    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("review_rating ")
}

model Order {
  id           String        @id @default(uuid())
  user         User          @relation(fields: [userId], references: [id])
  userId       String
  orderedBooks OrderedBook[]
  status       String        @default("pending")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("ordes")
}

model OrderedBook {
  id       String @id @default(uuid())
  order    Order  @relation(fields: [orderId], references: [id])
  orderId  String
  bookId   String
  quantity Int
}
